manifest {
    homePage = 'https://github.com/proychou/hCoV19'
    description = 'SARS-CoV-2 pipeline'
    version = '0.1'
    name = 'hCoV19'
}

// containers defined here (referenced by `label` directive)
process {
    withLabel:bowtie2  { container = "quay.io/biocontainers/bowtie2:2.4.1--py38he513fc3_0" }
    withLabel:bwa      { container = "quay.io/biocontainers/bwa:0.7.17--hed695b0_7" }
    withLabel:prokka   { container = "quay.io/biocontainers/prokka:1.14.6--pl526_0" }
    withLabel:python   { container = "python:3.8.2-buster" }
    withLabel:bbmap    { container = "quay.io/biocontainers/bbmap:38.79--h516909a_0" }
    withLabel:samtools { container = "quay.io/biocontainers/samtools:1.10--h9402c20_2" }
    withLabel:pysam    { container = "quay.io/biocontainers/pysam:0.15.4--py37hbcae180_0" }
    withLabel:spades   { container = "quay.io/biocontainers/spades:3.14.0--h2d02072_0" }
    withLabel:rscript  { container = "bioconductor/release_core2:R3.6.2_Bioc3.10" }
}


profiles {
    uw_batch {
        workDir = "s3://uwlm-nextflow-data/workdir/hCoV19"
        process {
            scratch = "/docker_scratch"
            queue = "ngs-queue"
            executor = "awsbatch"
            errorStrategy = "ignore"
            withLabel:bowtie2 {
              cpus = 8
              memory = 8.GB
            }
            withLabel:bwa {
              cpus = 8
              memory = 8.GB 
            }
            withLabel:prokka {
              cpus = 8
              memory = 8.GB
            }
            withLabel:python {
              cpus = 2
              memory = 8.GB
            }
            withLabel:bbmap {
              cpus = 6
              memory = 24.GB
            }
            withLabel:samtools {
              cpus = 8
              memory = 8.GB
            }
            withLabel:pysam {
              cpus = 8 
              memory = 8.GB
            }
            withLabel:spades {
              cpus = 16
              memory = 32.GB
            }
            withLabel:rscript {
              cpus = 2
              memory = 8.GB
            }
        }
        aws {
            region = "us-west-2"
            batch {
                volumes = "/docker_scratch"
                cliPath = "/home/ec2-user/miniconda/bin/aws"
            }
        }
    }
    standard {
        workDir = "work"
        resume = true  // null for no resume
        docker {
            enabled = true
        }
        params {
            datadir = "test/"
            manifest = "test/manifest.csv"
            output = "output"
            take = -1 // -1 all
        }
        process {
            cpus = 16
            errorStrategy = "ignore"
            executor = "local"
            memory = 64.GB
            withLabel: fastqc_mem {
                // fastqc --help: "Each thread will be allocated 250MB of mem"
                memory = { 250.MB * task.cpus }
            }
        }
        executor {
            queueSize = 4
        }
    }
    hutch_batch {
        workDir = "s3://fh-pi-fredricks-d/lab/crosenth/hcov19/work"
        resume = true
        params {
            datadir = "s3://fh-pi-fredricks-d/lab/crosenth/hcov19/data/"
            manifest = "test/manifest.csv"
            output = "output"
            take = -1 // -1 all
        }
        process {
            executor = "awsbatch"
            scratch = "/tmp"
            // https://sciwiki.fredhutch.org/scicomputing/compute_cloud/#choose-a-job-queue
            queue = "cpu-spot-50"
            errorStrategy = "ignore"
            cpus = 8
            memory = 64.GB
            // allocate resources according to labels; see
            // https://www.nextflow.io/docs/latest/config.html#scope-process
            // https://www.nextflow.io/docs/latest/process.html#label
            withLabel: med_cpu_mem {
                cpus = 8
                memory = 16.GB
                maxRetries = 3
            }
            withLabel: fastqc_mem {
                // fastqc --help: "Each thread will be allocated 250MB of mem"
                memory = { 250.MB * task.cpus }
            }
        }
        aws {
            batch {
                // https://github.com/nextflow-io/nextflow/issues/849
                cliPath = "/home/ec2-user/miniconda/bin/aws"
                volumes = ['/docker_scratch:/tmp:rw']
                jobRole = "arn:aws:iam::064561331775:role/fh-pi-fredricks-d-batchtask"
            }
        }
        executor {
            queueSize = 500
        }
    }
}

trace {
    enabled = true
    file = "output/execution/trace.csv"
    sep = ","
    fields = "task_id,hash,native_id,tag,name,status,exit,submit,duration,realtime,%cpu,rss,vmem,rchar,wchar"
}

report {
    enabled = true
    file = "output/execution/report.html"
}
